name: Tests

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string

jobs:
  get-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.packages.outputs.tests }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Check which test suites this package has
        id: packages
        run: uv run --no-project --script .github/get-tests.py ${{ inputs.package }}

  static:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [
          '3.8',  # Ubuntu 20.04 (oldest supported by ops)
          '3.10',  # Ubuntu 22.04
          '3.12',  # Ubuntu 24.04
          '3.13',  # latest Python release
        ]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Run static analysis
        run: uvx --from rust-just just python=${{ matrix.python-version }} static ${{ inputs.package }}

  unit:
    needs: get-tests
    if: contains(fromJson(needs.get-tests.outputs.tests), 'unit')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [
          '3.8',  # Ubuntu 20.04 (oldest supported by ops)
          '3.10',  # Ubuntu 22.04
          '3.12',  # Ubuntu 24.04
          '3.13',  # latest Python release
        ]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Run unit tests
        run: uvx --from rust-just just python=${{ matrix.python-version }} unit ${{ inputs.package }}

  pebble:
    needs: get-tests
    if: contains(fromJson(needs.get-tests.outputs.tests), 'pebble')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pebble-version: [
          'v1.1.1',  # Juju 2.9.50 LTS
          # 'v1.7.4',  # Juju 3.4.6
          # 'v1.10.2',  # Juju 3.5.7
          # 'v1.19.0',  # Juju 3.6.4 LTS
          'master',
        ]
        python-version: [
          '3.8',  # Ubuntu 20.04 (oldest supported by ops)
          # '3.10',  # Ubuntu 22.04
          # '3.12',  # Ubuntu 24.04
          '3.13',  # latest Python release
        ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          # To suppress the "Restore cache failed" error, since there is no go.sum file here.
          cache: false

      - name: Install Pebble
        run: go install github.com/canonical/pebble/cmd/pebble@${{ matrix.pebble-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Run Pebble integration tests
        run: uvx --from rust-just just python=${{ matrix.python-version }} pebble ${{ inputs.package }}

  juju:
    needs: get-tests
    if: contains(fromJson(needs.get-tests.outputs.tests), 'juju')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        juju: ['3.6/stable']
        substrate: ['k8s', 'vm']
    steps:
      - uses: actions/checkout@v4

      - name: Install concierge
        run: sudo snap install --classic concierge

      - name: Prepare Juju for microk8s
        if: ${{ matrix.substrate == 'k8s' }}
        run: sudo concierge prepare --verbose --juju-channel=${{ matrix.juju }} --charmcraft-channel=3.x/stable -p microk8s

      - name: Prepare Juju for machine
        if: ${{ matrix.substrate == 'vm' }}
        run: sudo concierge prepare --verbose --juju-channel=${{ matrix.juju }} --charmcraft-channel=3.x/stable -p machine

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Pack charms
        run: uvx --from rust-just just pack-${{ matrix.substrate }} ${{ inputs.package }}

      - name: Run Juju integration tests
        run: uvx --from rust-just just juju-${{ matrix.substrate }} ${{ inputs.package }}
